 # Set your OpenAI API key as an environment variable
import os
import openai
from openai import OpenAI
import time
def meditation_from_tape(transcript):
    print(transcript)
    os.environ["OPENAI_API_KEY"] = "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"
    class ChatCompletionMessage:
        def __init__(self, content, role, function_call=None, tool_calls=None):
            self.content = content
            self.role = role
            self.function_call = function_call
            self.tool_calls = tool_calls

        def get_text_content(self):
            # Return only the text content
            return self.content
        # Initialize the OpenAI client
    client = openai.OpenAI()

    # Your code for interacting with the OpenAI API goes here
    completion = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "you are going to take in a big affirmation tape and you are going to identify the seven most important affirmations in the tape and you are going to put them all on one line with semicolons and ellipses between them. example: “you are safe… ; you are great… ;’ like that."},   
            {"role": "user", "content": str(transcript)}
        ]
    )


    # Extract the actual content generated by GPT-3.5 Turbo
    generated_message = completion.choices[0].message
    generated_message_object = ChatCompletionMessage(
        content=generated_message.content,
        role='assistant'  # Assuming the role is 'assistant'
    )

    # Print out the text that will be read
    text_content2 = generated_message_object.get_text_content()
    # Save the text content to a file
    with open('output_text2.txt', 'w') as file:
        file.write(text_content2)
    print("Text to be read:", text_content2)
    print('Done with ChatGPT')
    return text_content2
  
